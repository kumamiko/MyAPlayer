<Window x:Class="MyAPlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:local="clr-namespace:MyAPlayer"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:controls="clr-namespace:Digimezzo.WPFControls;assembly=Digimezzo.WPFControls"
        mc:Ignorable="d" FontWeight="Light" RenderOptions.BitmapScalingMode="HighQuality" ShowInTaskbar="False"
        Title="{Binding Path=Title}"  Width="360" MaxHeight="650" WindowStyle="None" AllowsTransparency="True" KeyDown="Window_KeyDown"  Background="Transparent" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" Loaded="Window_Loaded">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.7" Duration="0:0:0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.7" To="1" Duration="0:0:0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--让选中的选项变色-->
        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#666"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                    AncestorType={x:Type ListViewItem}},Path=IsSelected}" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource Brush_Accent}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--音乐list-->
        <DataTemplate x:Key="dataTemplateSongList" DataType="{x:Type local:Song}">
            <Border BorderThickness="0,0.1,0,0" BorderBrush="#bbb">
                <Grid Height="33" Width="343"  Focusable="False">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Style.Resources>
                                <SolidColorBrush x:Key="ButtonBrush1" Color="#eee" />
                                <SolidColorBrush x:Key="ButtonBrush2" Color="Transparent" />
                                <Storyboard x:Key="OnMouseEnter1">
                                    <ObjectAnimationUsingKeyFrames 
                                       Storyboard.TargetProperty="Background">

                                        <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                    Value="{StaticResource ButtonBrush1}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="OnMouseLeave1">
                                    <ObjectAnimationUsingKeyFrames 
                                       Storyboard.TargetProperty="Background">

                                        <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                    Value="{StaticResource ButtonBrush2}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </Style.Resources>
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding 
                           RelativeSource={RelativeSource Mode=FindAncestor,
                           AncestorType={x:Type ListViewItem}},Path=IsSelected}" 
                 Value="True">
                                    <Setter Property="Background" Value="#F5F5F5"/>
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#F5F5F5" />
                                </Trigger>
                                <!--<EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource OnMouseLeave1}"/>
                        </EventTrigger>-->
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition MaxWidth="30"/>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Rectangle Grid.Column="0" Width="3" Height="22" Fill="{DynamicResource Brush_Accent}"
                                   VerticalAlignment="Center" HorizontalAlignment="Left">
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding 
                           RelativeSource={RelativeSource Mode=FindAncestor,
                           AncestorType={x:Type ListViewItem}},Path=IsSelected}" 
                 Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <TextBlock Grid.Column="1" Style="{StaticResource TextBlockStyle}" Text="{Binding id}" VerticalAlignment="Center" />
                    <TextBlock Grid.Column="2" Style="{StaticResource TextBlockStyle}" Text="{Binding title}" ToolTip="{Binding title}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                    <TextBlock Grid.Column="3" Style="{StaticResource TextBlockStyle}" Text="{Binding artist}" ToolTip="{Binding artist}" VerticalAlignment="Center"  HorizontalAlignment="Right" Margin="0 0 15 0"/>
                </Grid>
            </Border>
        </DataTemplate>
        <!--水印文本框-->
        <Style x:Key="WarkTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FFABADB3"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                <TextBlock x:Name="WARKTEXT" Text="{TemplateBinding Tag}" Foreground="#7F2F2F2F" Visibility="Collapsed" Padding="0 10 0 0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                    <Condition Property="IsFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="WARKTEXT" Value="Visible"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                        <Condition Property="IsSelectionActive" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <ContextMenu x:Key="Menu">
            <MenuItem x:Name="menuOpen" Header="打开" Click="menuOpen_Click"/>
            <MenuItem x:Name="menuTopMost" Header="窗口置顶" Click="menuTopMost_Click" IsCheckable="True" IsChecked="{Binding Path=IsTopmost, Mode=OneWay}"/>
            <MenuItem Header="循环">
                <MenuItem x:Name="menuNoRepeat"  Header="不循环"    IsCheckable="True"  IsChecked="{Binding Path=IsNoRepeat,Mode=OneWay}" IsEnabled="{Binding IsNoRepeat,Mode=OneWay,Converter={StaticResource NegateBooleanConverter}}" Click="MenuNoRepeat_Click"   />
                <MenuItem x:Name="menuRepeatOne"  Header="单曲循环"  IsCheckable="True" IsChecked="{Binding Path=IsRepeatOne,Mode=OneWay}" IsEnabled="{Binding IsRepeatOne,Mode=OneWay,Converter={StaticResource NegateBooleanConverter}}" Click="MenuRepeatOne_Click" />
                <MenuItem x:Name="menuRepeatAll"  Header="列表循环"  IsCheckable="True" IsChecked="{Binding Path=IsRepeatAll,Mode=OneWay}" IsEnabled="{Binding IsRepeatAll,Mode=OneWay,Converter={StaticResource NegateBooleanConverter}}" Click="MenuRepeatAll_Click" />
            </MenuItem>
            <Separator/>
            <MenuItem x:Name="menuSearchMore" Header="搜索更多" Click="menuSearchMore_Click"/>
            <MenuItem x:Name="menuChangeDownloadPath" Header="修改下载路径" Click="menuChangeDownloadPath_Click"/>
            <!--<MenuItem x:Name="menuAddCoverToFile" Header="填充封面" Click="menuAddCoverToFile_Click"/>-->
            <MenuItem x:Name="menuAbout" Header="关于" Click="menuAbout_Click"/>
            <Separator/>
            <MenuItem Header="退出" Click="btnExit_Click"/>
        </ContextMenu>
        <ContextMenu x:Key="TrayMenu" Width="128">
            <MenuItem Header="关于" Click="menuAbout_Click"/>
            <Separator/>
            <MenuItem Header="退出" Click="btnExit_Click"/>
        </ContextMenu>
    </Window.Resources>
    <Border>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="66"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid x:Name="rootGrid" Grid.Row="0" Height="66" Width="350" Background="White" ContextMenu="{StaticResource Menu}" MouseMove="Grid_MouseMove" MouseWheel="rootGrid_MouseWheel">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="66"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Rectangle Height="66" Width="66" Fill="Gray"/>
                    <MediaElement x:Name="media" UnloadedBehavior="Manual"  LoadedBehavior="Manual" MediaOpened="media_MediaOpened" MediaEnded="media_MediaEnded" Source="{Binding Path=Path}" />
                    <!--<Image x:Name="cover" Height="66" Width="66" Stretch="UniformToFill"/>-->
                    <controls:SlidingContentControl x:Name="ContentControl" Focusable="False"/>
                    <Border>
                        <Canvas Height="66" Width="66">
                            <Button x:Name="btnPlayOrPause" Focusable="False" Width="30" Height="30" Canvas.Top="18" Canvas.Left="18" BorderThickness="0" BorderBrush="Transparent" Padding="0" Click="btnPlayOrPause_Click" Style="{DynamicResource ButtonStyle}">
                                <!--<Grid>
                                    <Ellipse Width="40" Height="40" Fill="Red"/>
                                </Grid>-->
                                <Button.Background>
                                    <ImageBrush x:Name="btn_background" Stretch="UniformToFill" ImageSource="images/img_play.png"/>
                                </Button.Background>
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <RotateTransform/>
                                    </TransformGroup>
                                </Button.RenderTransform>
                            </Button>
                        </Canvas>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="2" ShadowDepth="1" Direction="270" Opacity="0.7"/>
                        </Border.Effect>
                    </Border>
                </Grid>
                <Grid Grid.Column="1" Background="White">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="10"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <StackPanel Orientation="Horizontal" Margin="15 0 15 5">
                            <TextBlock x:Name="txtTitle" FontSize="13" Text="{Binding Path=Title}" ToolTip="{Binding Path=Title}" Foreground="#333" FontWeight="Normal" FontFamily="Microsoft YaHei" VerticalAlignment="Bottom" />
                            <TextBlock x:Name="txtSinger" FontSize="10" Text="{Binding Path=Artist}" ToolTip="{Binding Path=Artist}" Foreground="#777" Margin="5 0 0 0" VerticalAlignment="Bottom"/>
                        </StackPanel>
                        <TextBox x:Name="txtSearch" Style="{StaticResource WarkTextBoxStyle}" Tag="搜索" BorderThickness="0"  FontSize="20" Margin="300 0 0 0" Background="#F6F6F6" Text="" Padding="0 10 0 0"/>
                        <Button x:Name="btnClearText" Visibility="Collapsed" Click="btnClearText_Click" HorizontalAlignment="Right" Width="30" Margin="0 0 0 0" Padding="0"  Focusable="False" Style="{StaticResource ButtonStyle}" Background="Transparent" BorderThickness="0">
                            <Grid>
                                <!--<fa:FontAwesome FontSize="20" Icon="Close" Foreground="Gray"/>-->
                                <TextBlock Text="&#xE106;" FontSize="15" Foreground="Gray"
                                    Style="{StaticResource SegoeAssets}"/>
                            </Grid>
                        </Button>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="10 0 5 0">
                                <TextBlock x:Name="txtCurrentSeconds" FontFamily="SimHei"  FontSize="12" VerticalAlignment="Bottom"  Foreground="#aaa" Text="{Binding Path=Position}"/>
                                <TextBlock FontSize="10" VerticalAlignment="Bottom"  Foreground="Gray" Text=" / "/>
                                <TextBlock x:Name="txtTotalSeconds"  FontFamily="SimHei"  FontSize="12" VerticalAlignment="Bottom"  Foreground="#aaa" Text="00:00"/>
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Column="1">
                            <StackPanel Orientation="Horizontal" Margin="0 0 5 0" VerticalAlignment="Bottom">
                                <Button x:Name="btnVolume" Width="15" ToolTip="静音" Margin="0 0 0 0" Padding="0" Click="btnVolume_Click" Focusable="False" Style="{StaticResource ButtonStyle}" Background="Transparent" BorderThickness="0">
                                    <Grid>
                                        <fa:FontAwesome x:Name="faUnMute" Icon="VolumeUp" Foreground="Gray"/>
                                        <fa:FontAwesome x:Name="faMute" Icon="VolumeOff" Foreground="Gray" Visibility="Collapsed"/>
                                    </Grid>
                                </Button>
                                <Button x:Name="btnOpen" Width="15" ToolTip="打开本地音乐" Margin="0 0 0 0" Padding="0" Click="btnOpen_Click" Focusable="False" Style="{StaticResource ButtonStyle}" Background="Transparent" BorderThickness="0">
                                    <Grid>
                                        <fa:FontAwesome Icon="FolderOpen" Foreground="Gray"/>
                                    </Grid>
                                </Button>
                                <Button x:Name="btnSearch" Width="15" ToolTip="搜索网易云音乐" Margin="0 0 0 0" Padding="0" Click="btnSearch_Click" Focusable="False" Style="{StaticResource ButtonStyle}" Background="Transparent" BorderThickness="0">
                                    <Grid>
                                        <fa:FontAwesome Icon="Search" Foreground="Gray"/>
                                    </Grid>
                                </Button>
                                <Button x:Name="btnDownload" Width="15" ToolTip="下载当前音乐" IsEnabled="{Binding IsNotDownloading}" Margin="0 0 0 0" Padding="0" Click="btnDownload_Click"  Focusable="False" Style="{StaticResource ButtonStyle}" Background="Transparent" BorderThickness="0">
                                    <Grid>
                                        <fa:FontAwesome Icon="Download" Foreground="Gray"/>
                                    </Grid>
                                </Button>
                                <Button x:Name="btnRepeat" Width="15" Visibility="Collapsed" ToolTip="重复" Margin="0 0 0 0" Padding="0" Focusable="False" Style="{StaticResource ButtonStyle}" Background="Transparent" BorderThickness="0">
                                    <Grid>
                                        <fa:FontAwesome Icon="Repeat" Foreground="Gray"/>
                                    </Grid>
                                </Button>
                                <Button x:Name="btnLyric" Width="15" ToolTip="显示歌词" Margin="0 0 0 0" Padding="0" Click="btnLyric_Click" Focusable="False" Style="{StaticResource ButtonStyle}" Background="Transparent" BorderThickness="0">
                                    <Grid>
                                        <fa:FontAwesome Icon="Eye" Foreground="Gray"/>
                                    </Grid>
                                </Button>
                                <Button x:Name="btnMenu" Width="15" ToolTip="目录" Margin="0 0 0 0" Padding="0" Click="btnMenu_Click" Focusable="False" Style="{StaticResource ButtonStyle}" Background="Transparent" BorderThickness="0">
                                    <Grid>
                                        <fa:FontAwesome Icon="Bars" Foreground="Gray"/>
                                    </Grid>
                                </Button>
                                <Button x:Name="btnExit" Width="15" ToolTip="退出" Margin="0 0 0 0" Padding="0" Click="btnExit_Click" Focusable="False" Style="{StaticResource ButtonStyle}" Background="Transparent" BorderThickness="0">
                                    <Grid>
                                        <fa:FontAwesome Icon="TimesCircle" Foreground="Gray"/>
                                    </Grid>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <Grid Grid.Row="2">
                        <Rectangle x:Name="rec" Height="3" Width="{Binding Width}"  VerticalAlignment="Bottom" HorizontalAlignment="Left" Fill="{DynamicResource Brush_Accent}" Opacity="0.8"/>
                    </Grid>
                </Grid>
            </Grid>
            <Grid x:Name="gridList" Grid.Row="1" Visibility="{Binding IsShowList, Converter={StaticResource BooleanToCollapsedConverter}}" Width="350" MaxHeight="565" VerticalAlignment="Top">
                <ListView x:Name="listViewSongList" Margin="0" Padding="0" ItemTemplate="{StaticResource dataTemplateSongList}" BorderThickness="0" FocusVisualStyle="{x:Null}"
                          SelectionChanged="listViewSongList_SelectionChanged">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>
            <Border Grid.Row="1" >
                <local:MessageControl x:Name="mcMsg" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0 100"/>
                <Border.Effect>
                    <DropShadowEffect BlurRadius="20" ShadowDepth="5" Direction="270" Opacity="0.3"/>
                </Border.Effect>
            </Border>
            <tb:TaskbarIcon
                    Visibility="Visible"
                    ToolTipText="{Binding Titile}"
                    IconSource="/player.ico"
                    ContextMenu="{StaticResource TrayMenu}"
                    MenuActivation="LeftOrRightClick"
                    PopupActivation="DoubleClick"
            />
        </Grid>
        <Border.Effect>
            <DropShadowEffect BlurRadius="5" ShadowDepth="1" Direction="270" Opacity="0.3"/>
        </Border.Effect>
    </Border>
</Window>
